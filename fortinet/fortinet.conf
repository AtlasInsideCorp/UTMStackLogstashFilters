filter {
 #Check the minimum fields present in fortinet log, based in docs and samples provided
 #Were 73 different fields identified, below 6 are used to identify fortinet log
 #In addition we check that "traffic" and "forward" strings are present in message
 
 if ("traffic" in [message] and "forward" in [message]
 and "date=" in [message] and "time=" in [message] and "logid=" in [message]
 and "type=" in [message] and "subtype=" in [message] and "level=" in [message]) { 

#......................................................................# 
 #First, replace whitespaces with default string after = to avoid kv issues, example:
 #device_id= date=2021-08-18, generates -> device_id="date=2021-08-18"
 #and should generate two fields: device_id and date
      mutate {
        gsub => [
          "message", "= ", "=X0X "
        ]
      }

#......................................................................#
#Using the kv filter with default config, usefull in key-value logs
 kv {}
 
#......................................................................#
#Generating dataSource field required by CurrelationRulesEngine
#Checks if devname field is present or if it has no value, in those
#cases datasource points to host field
 if ([devname]){
   if ([devname]=="X0X"){
    mutate {
     add_field => { "dataSource" => "%{host}" }
	}
	#Eliminating devname if it is present but has no value
	mutate {
      remove_field => ["[devname]"]
	}
   }else{
    mutate {
     add_field => { "dataSource" => "%{devname}" }
	}
   }
 }else{
    mutate {
     add_field => { "dataSource" => "%{host}" }
	}
 }
#......................................................................# 
#Generating dataType field required by CurrelationRulesEngine
   mutate {
		  add_field => {
			"dataType" => "firewall-fortigate-traffic"
		  }
	   }

#......................................................................#	   
#Formatting number values
   mutate {
          convert => {
          "duration" => "integer"
		  "sessionid" => "integer"
		  "transport" => "integer"
		  "srcport" => "integer"
		  "srcserver" => "integer"
		  "dstport" => "integer"
		  "appid" => "integer"
		  "countapp" => "integer"
		  "rcvdbyte" => "integer"
		  "rcvdpkt" => "integer"
		  "sentbyte" => "integer"
		  "sentpkt" => "integer"
		  "policyid" => "integer"
		  "eventtime" => "integer"
		  "proto" => "integer"
		  "countdns" => "integer"
        }
   }
#......................................................................#
#Then add all possible fields to the json tree structure
#The fields that contains the default string for null values "X0X"
#will be removed from the structure tree, not from the message
   mutate { 
       rename => {"devname" => "[logx][fortigate][devname]"}
	   rename => {"message" => "[logx][fortigate][message]"}
   }
   
   if [date]=="X0X" {
	   mutate { remove_field => ["[date]"] }
   }else {
       mutate { rename => {"date" => "[logx][fortigate][date]"} }
   }
   if [time]=="X0X" {
	   mutate { remove_field => ["[time]"] }
   }else {
       mutate { rename => {"time" => "[logx][fortigate][time]"} }
   }
   if [logid]=="X0X" {
	   mutate { remove_field => ["[logid]"] }
   }else {
       mutate { rename => {"logid" => "[logx][fortigate][logid]"} }
   }
   if [type]=="X0X" {
	   mutate { remove_field => ["[type]"] }
   }else {
       mutate { rename => {"type" => "[logx][fortigate][type]"} }
   }
   if [subtype]=="X0X" {
	   mutate { remove_field => ["[subtype]"] }
   }else {
       mutate { rename => {"subtype" => "[logx][fortigate][subtype]"} }
   }
   if [level]=="X0X" {
	   mutate { remove_field => ["[level]"] }
   }else {
       mutate { rename => {"level" => "[logx][fortigate][level]"} }
   }
   if [vd]=="X0X" {
	   mutate { remove_field => ["[vd]"] }
   }else {
       mutate { rename => {"vd" => "[logx][fortigate][vd]"} }
   }
   if [eventtime]=="X0X" {
	   mutate { remove_field => ["[eventtime]"] }
   }else {
       mutate { rename => {"eventtime" => "[logx][fortigate][eventtime]"} }
   }
   if [tz]=="X0X" {
	   mutate { remove_field => ["[tz]"] }
   }else {
       mutate { rename => {"tz" => "[logx][fortigate][tz]"} }
   }
   if [srcip]=="X0X" {
	   mutate { remove_field => ["[srcip]"] }
   }else {
       mutate { rename => {"srcip" => "[logx][fortigate][src_ip]"} }
   }
   if [srcport]=="X0X" {
	   mutate { remove_field => ["[srcport]"] }
   }else {
       mutate { rename => {"srcport" => "[logx][fortigate][src_port]"} }
   }
   if [srcintfrole]=="X0X" {
	   mutate { remove_field => ["[srcintfrole]"] }
   }else {
       mutate { rename => {"srcintfrole" => "[logx][fortigate][srcintfrole]"} }
   }
   if [dstip]=="X0X" {
	   mutate { remove_field => ["[dstip]"] }
   }else {
       mutate { rename => {"dstip" => "[logx][fortigate][dest_ip]"} }
   }
   if [dstport]=="X0X" {
	   mutate { remove_field => ["[dstport]"] }
   }else {
       mutate { rename => {"dstport" => "[logx][fortigate][dest_port]"} }
   }
   if [dstintf]=="X0X" {
	   mutate { remove_field => ["[dstintf]"] }
   }else {
       mutate { rename => {"dstintf" => "[logx][fortigate][dstintf]"} }
   }
   if [dstintfrole]=="X0X" {
	   mutate { remove_field => ["[dstintfrole]"] }
   }else {
       mutate { rename => {"dstintfrole" => "[logx][fortigate][dstintfrole]"} }
   }
   if [sessionid]=="X0X" {
	   mutate { remove_field => ["[sessionid]"] }
   }else {
       mutate { rename => {"sessionid" => "[logx][fortigate][sessionid]"} }
   }
   if [proto]=="X0X" {
	   mutate { remove_field => ["[proto]"] }
   }else {
       mutate { rename => {"proto" => "[logx][fortigate][proto]"} }
   }
   if [action]=="X0X" {
	   mutate { remove_field => ["[action]"] }
   }else {
       mutate { rename => {"action" => "[logx][fortigate][action]"} }
   }
   if [policyid]=="X0X" {
	   mutate { remove_field => ["[policyid]"] }
   }else {
       mutate { rename => {"policyid" => "[logx][fortigate][policyid]"} }
   }
   if [policytype]=="X0X" {
	   mutate { remove_field => ["[policytype]"] }
   }else {
       mutate { rename => {"policytype" => "[logx][fortigate][policytype]"} }
   }
   if [service]=="X0X" {
	   mutate { remove_field => ["[service]"] }
   }else {
       mutate { rename => {"service" => "[logx][fortigate][service]"} }
   }
   if [trandisp]=="X0X" {
	   mutate { remove_field => ["[trandisp]"] }
   }else {
       mutate { rename => {"trandisp" => "[logx][fortigate][trandisp]"} }
   }
   if [duration]=="X0X" {
	   mutate { remove_field => ["[duration]"] }
   }else {
       mutate { rename => {"duration" => "[logx][fortigate][duration]"} }
   }
   if [mastersrcmac]=="X0X" {
	   mutate { remove_field => ["[mastersrcmac]"] }
   }else {
       mutate { rename => {"mastersrcmac" => "[logx][fortigate][mastersrcmac]"} }
   }
   if [srcmac]=="X0X" {
	   mutate { remove_field => ["[srcmac]"] }
   }else {
       mutate { rename => {"srcmac" => "[logx][fortigate][srcmac]"} }
   }
   if [srcintf]=="X0X" {
	   mutate { remove_field => ["[srcintf]"] }
   }else {
       mutate { rename => {"srcintf" => "[logx][fortigate][srcintf]"} }
   }
   if [srcname]=="X0X" {
	   mutate { remove_field => ["[srcname]"] }
   }else {
       mutate { rename => {"srcname" => "[logx][fortigate][srcname]"} }
   }
   if [dstcountry]=="X0X" {
	   mutate { remove_field => ["[dstcountry]"] }
   }else {
       mutate { rename => {"dstcountry" => "[logx][fortigate][dstcountry]"} }
   }
   if [srccountry]=="X0X" {
	   mutate { remove_field => ["[srccountry]"] }
   }else {
       mutate { rename => {"srccountry" => "[logx][fortigate][srccountry]"} }
   }
   if [appid]=="X0X" {
	   mutate { remove_field => ["[appid]"] }
   }else {
       mutate { rename => {"appid" => "[logx][fortigate][appid]"} }
   }
   if [app]=="X0X" {
	   mutate { remove_field => ["[app]"] }
   }else {
       mutate { rename => {"app" => "[logx][fortigate][app]"} }
   }
   if [appcat]=="X0X" {
	   mutate { remove_field => ["[appcat]"] }
   }else {
       mutate { rename => {"appcat" => "[logx][fortigate][appcat]"} }
   }
   if [apprisk]=="X0X" {
	   mutate { remove_field => ["[apprisk]"] }
   }else {
       mutate { rename => {"apprisk" => "[logx][fortigate][apprisk]"} }
   }
   if [applist]=="X0X" {
	   mutate { remove_field => ["[applist]"] }
   }else {
       mutate { rename => {"applist" => "[logx][fortigate][applist]"} }
   }
   if [appact]=="X0X" {
	   mutate { remove_field => ["[appact]"] }
   }else {
       mutate { rename => {"appact" => "[logx][fortigate][appact]"} }
   }
   if [sentbyte]=="X0X" {
	   mutate { remove_field => ["[sentbyte]"] }
   }else {
       mutate { rename => {"sentbyte" => "[logx][fortigate][sentbyte]"} }
   }
   if [rcvdbyte]=="X0X" {
	   mutate { remove_field => ["[rcvdbyte]"] }
   }else {
       mutate { rename => {"rcvdbyte" => "[logx][fortigate][rcvdbyte]"} }
   }
   if [sentpkt]=="X0X" {
	   mutate { remove_field => ["[sentpkt]"] }
   }else {
       mutate { rename => {"sentpkt" => "[logx][fortigate][sentpkt]"} }
   }
   if [rcvdpkt]=="X0X" {
	   mutate { remove_field => ["[rcvdpkt]"] }
   }else {
       mutate { rename => {"rcvdpkt" => "[logx][fortigate][rcvdpkt]"} }
   }
   if [sentdelta]=="X0X" {
	   mutate { remove_field => ["[sentdelta]"] }
   }else {
       mutate { rename => {"sentdelta" => "[logx][fortigate][sentdelta]"} }
   }
   if [rcvddelta]=="X0X" {
	   mutate { remove_field => ["[rcvddelta]"] }
   }else {
       mutate { rename => {"rcvddelta" => "[logx][fortigate][rcvddelta]"} }
   }
   if [osname]=="X0X" {
	   mutate { remove_field => ["[osname]"] }
   }else {
       mutate { rename => {"osname" => "[logx][fortigate][osname]"} }
   }
   if [srcswversion]=="X0X" {
	   mutate { remove_field => ["[srcswversion]"] }
   }else {
       mutate { rename => {"srcswversion" => "[logx][fortigate][srcswversion]"} }
   }
   if [srchwversion]=="X0X" {
	   mutate { remove_field => ["[srchwversion]"] }
   }else {
       mutate { rename => {"srchwversion" => "[logx][fortigate][srchwversion]"} }
   }
   if [srcserver]=="X0X" {
	   mutate { remove_field => ["[srcserver]"] }
   }else {
       mutate { rename => {"srcserver" => "[logx][fortigate][srcserver]"} }
   }
   if [srchwvendor]=="X0X" {
	   mutate { remove_field => ["[srchwvendor]"] }
   }else {
       mutate { rename => {"srchwvendor" => "[logx][fortigate][srchwvendor]"} }
   }
   if [dsthwvendor]=="X0X" {
	   mutate { remove_field => ["[dsthwvendor]"] }
   }else {
       mutate { rename => {"dsthwvendor" => "[logx][fortigate][dsthwvendor]"} }
   }
   if [dstosname]=="X0X" {
	   mutate { remove_field => ["[dstosname]"] }
   }else {
       mutate { rename => {"dstosname" => "[logx][fortigate][dstosname]"} }
   }
   if [dstswversion]=="X0X" {
	   mutate { remove_field => ["[dstswversion]"] }
   }else {
       mutate { rename => {"dstswversion" => "[logx][fortigate][dstswversion]"} }
   }
   if [unauthuser]=="X0X" {
	   mutate { remove_field => ["[unauthuser]"] }
   }else {
       mutate { rename => {"unauthuser" => "[logx][fortigate][unauthuser]"} }
   }
   if [unauthusersource]=="X0X" {
	   mutate { remove_field => ["[unauthusersource]"] }
   }else {
       mutate { rename => {"unauthusersource" => "[logx][fortigate][unauthusersource]"} }
   }
   if [dstunauthuser]=="X0X" {
	   mutate { remove_field => ["[dstunauthuser]"] }
   }else {
       mutate { rename => {"dstunauthuser" => "[logx][fortigate][dstunauthuser]"} }
   }
   if [dstunauthusersource]=="X0X" {
	   mutate { remove_field => ["[dstunauthusersource]"] }
   }else {
       mutate { rename => {"dstunauthusersource" => "[logx][fortigate][dstunauthusersource]"} }
   }
   if [masterdstmac]=="X0X" {
	   mutate { remove_field => ["[masterdstmac]"] }
   }else {
       mutate { rename => {"masterdstmac" => "[logx][fortigate][masterdstmac]"} }
   }
   if [dstmac]=="X0X" {
	   mutate { remove_field => ["[dstmac]"] }
   }else {
       mutate { rename => {"dstmac" => "[logx][fortigate][dstmac]"} }
   }
   if [dstserver]=="X0X" {
	   mutate { remove_field => ["[dstserver]"] }
   }else {
       mutate { rename => {"dstserver" => "[logx][fortigate][dstserver]"} }
   }
   if [device_id]=="X0X" {
	   mutate { remove_field => ["[device_id]"] }
   }else {
       mutate { rename => {"device_id" => "[logx][fortigate][device_id]"} }
   }
   if [transip]=="X0X" {
	   mutate { remove_field => ["[transip]"] }
   }else {
       mutate { rename => {"transip" => "[logx][fortigate][transip]"} }
   }
   if [transport]=="X0X" {
	   mutate { remove_field => ["[transport]"] }
   }else {
       mutate { rename => {"transport" => "[logx][fortigate][transport]"} }
   }
   if [utmaction]=="X0X" {
	   mutate { remove_field => ["[utmaction]"] }
   }else {
       mutate { rename => {"utmaction" => "[logx][fortigate][utmaction]"} }
   }
   if [utmref]=="X0X" {
	   mutate { remove_field => ["[utmref]"] }
   }else {
       mutate { rename => {"utmref" => "[logx][fortigate][utmref]"} }
   }
   if [countdns]=="X0X" {
	   mutate { remove_field => ["[countdns]"] }
   }else {
       mutate { rename => {"countdns" => "[logx][fortigate][countdns]"} }
   }
   if [direction]=="X0X" {
	   mutate { remove_field => ["[direction]"] }
   }else {
       mutate { rename => {"direction" => "[logx][fortigate][direction]"} }
   }
   if [devtype]=="X0X" {
	   mutate { remove_field => ["[devtype]"] }
   }else {
       mutate { rename => {"devtype" => "[logx][fortigate][devtype]"} }
   }
   if [countapp]=="X0X" {
	   mutate { remove_field => ["[countapp]"] }
   }else {
       mutate { rename => {"countapp" => "[logx][fortigate][countapp]"} }
   }
   if [poluuid]=="X0X" {
	   mutate { remove_field => ["[poluuid]"] }
   }else {
       mutate { rename => {"poluuid" => "[logx][fortigate][poluuid]"} }
   }
   if [policymode]=="X0X" {
	   mutate { remove_field => ["[policymode]"] }
   }else {
       mutate { rename => {"policymode" => "[logx][fortigate][policymode]"} }
   }
   if [crscore]=="X0X" {
	   mutate { remove_field => ["[crscore]"] }
   }else {
       mutate { rename => {"crscore" => "[logx][fortigate][crscore]"} }
   }
   if [craction]=="X0X" {
	   mutate { remove_field => ["[craction]"] }
   }else {
       mutate { rename => {"craction" => "[logx][fortigate][craction]"} }
   }
   if [crlevel]=="X0X" {
	   mutate { remove_field => ["[crlevel]"] }
   }else {
       mutate { rename => {"crlevel" => "[logx][fortigate][crlevel]"} }
   }
   if [identifier]=="X0X" {
	   mutate { remove_field => ["[identifier]"] }
   }else {
       mutate { rename => {"identifier" => "[logx][fortigate][identifier]"} }
   }
   
   #Cleaning message field
   mutate {
      gsub => ["[logx][fortigate][message]", "X0X", ""]
      }
   #Finally, remove unnecessary fields
   mutate {
      remove_field => ["@version","path"]
        }
 }
}