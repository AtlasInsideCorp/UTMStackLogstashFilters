filter {

# NIDS filter version 1.1.0
# Based on https://suricata.readthedocs.io/en/latest/output/eve/eve-json-format.html (latest 7.0.0) (april 2022)
# and real events log provided
# Support json format

    if [path] == "/var/log/suricata/eve.json" {
        if [event_type] == "anomaly" or [event_type] == "tls" or [event_type] == "flow" or [event_type] == "alert" or [event_type] == "dns" or [event_type] == "ssh" {
            mutate {
                rename => ["dest_ip", "[logx][nids][dest_ip]"]
                rename => ["dest_port", "[logx][nids][dest_port]"]
                rename => ["flow_id", "[logx][nids][flow_id]"]
                rename => ["host", "[logx][nids][host]"]
                rename => ["in_iface", "[logx][nids][in_iface]"]
                rename => ["proto", "[logx][nids][proto]"]
                rename => ["src_ip", "[logx][nids][src_ip]"]
                rename => ["src_port", "[logx][nids][src_port]"]
            }
        }
        mutate {
            add_field => {
                "dataType" => "nids"
            }
            add_field => {
                "dataSource" => "nids"
            }
            remove_field => [ "timestamp", "type", "path"]
            rename => ["event_type", "[logx][nids][event_type]"]
        }
        if [tls] {
            mutate {
                rename => ["tls", "[logx][nids][tls]"]
            }
        }
        if [ssh] {
            mutate {
                rename => ["ssh", "[logx][nids][ssh]"]
            }
        }
        if [stats] {
            mutate {
                rename => ["stats", "[logx][nids][stats]"]
            }
        }
        if [flow] {
            mutate {
                rename => ["flow", "[logx][nids][flow]"]
            }
        }
        if [tcp] {
            mutate {
                rename => ["tcp", "[logx][nids][tcp]"]
            }
        }
        if [dns] {
            mutate {
                rename => ["dns", "[logx][nids][dns]"]
            }
        }
        if [app_proto] {
            mutate {
                rename => ["app_proto", "[logx][nids][app_proto]"]
            }
        }
        if [anomaly] {
            mutate {
                rename => ["anomaly", "[logx][nids][anomaly]"]
            }
        }
        if [alert] {
            mutate {
                rename => ["alert", "[logx][nids][alert]"]
            }
            if [logx][nids][alert][severity] >= 3 {
                mutate {
                    add_field => {
                        "[logx][nids][severity_label]" => "Low"
                        "[logx][nids][severity]" => 1
                    }
                }
            }
            if [logx][nids][alert][severity] == 2 {
                mutate {
                    add_field => {
                        "[logx][nids][severity_label]" => "Medium"
                        "[logx][nids][severity]" => 2
                    }
                }
            }
            if [logx][nids][alert][severity] == 1 {
                mutate {
                    add_field => {
                        "[logx][nids][severity_label]" => "High"
                        "[logx][nids][severity]" => 3
                    }
                }
            }
            mutate {
                remove_field => [ "[logx][nids][alert][severity]" ]
            }
        }
      # Implementing logx.utm.action field used for established connections
        if [logx][nids][event_type] == "tls" {
           if ![logx][nids][tls][session_resumed] {
                mutate {
                  add_field => { "[logx][utm][action]" => "Success" }
                }
           }
        } else if [logx][nids][event_type] == "dns" {
          if [logx][nids][dns][type] == "answer" {
                mutate {
                  add_field => { "[logx][utm][action]" => "Success" }
                }
           }
        } else if [logx][nids][event_type] == "flow" {
          if [logx][nids][src_ip] and [logx][nids][dest_ip] and 
          [logx][nids][flow][bytes_toserver] > 0 and [logx][nids][flow][bytes_toclient] > 0 {
                mutate {
                  add_field => { "[logx][utm][action]" => "Success" }
                }
           }
        } else if [logx][nids][event_type] == "ssh" {
          if [logx][nids][src_ip] and [logx][nids][dest_ip] and 
          [logx][nids][ssh][server] and [logx][nids][ssh][client] {
                mutate {
                  add_field => { "[logx][utm][action]" => "Success" }
                }
           }
        } else if [logx][nids][event_type] == "alert" {
          if [logx][nids][src_ip] and [logx][nids][dest_ip] and 
          [logx][nids][alert][action] == "allowed" {
                mutate {
                  add_field => { "[logx][utm][action]" => "Success" }
                }
           }
        } else if [logx][nids][event_type] == "anomaly" {
          if [logx][nids][src_ip] and [logx][nids][dest_ip] {
                mutate {
                  add_field => { "[logx][utm][action]" => "Success" }
                }
           }
        }
    }
}
